@page "/"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using ServicesGateManagment.Client.Services
@using ServicesGateManagment.Shared
@using ServicesGateManagment.Shared.Models.Common
@inject IConfigService ConfigService
@inject IApiDataService ApiDataService
@inject IVehicleService VehicleService
@inject IJSRuntime JSRuntime
@inject ILogger<Index> Logger
@inject NavigationManager NavManager
@inject HttpClient Http


<PageTitle>سرویس مدیریت آفلاین شهرک مسکونی-هوشپاد</PageTitle>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert @(isError ? "alert-danger" : "alert-success") mt-3" role="alert">
        @message
    </div>              
}  
<div class="page-header">
    <h1 class="page-title">داشبورد</h1>
    @*     <div class="breadcrumb">
        <span class="breadcrumb-item active">خانه</span>
    </div> *@
</div>
<div class="dashboard-content">
    <!-- Statistics Cards -->
    <div class="grid grid-cols-4 mb-lg">
        <div class="stat-card">
            <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M128 128C128 92.7 156.7 64 192 64L448 64C483.3 64 512 92.7 512 128L512 512C529.7 512 544 526.3 544 544C544 561.7 529.7 576 512 576L128 576C110.3 576 96 561.7 96 544C96 526.3 110.3 512 128 512L128 128zM416 352C433.7 352 448 337.7 448 320C448 302.3 433.7 288 416 288C398.3 288 384 302.3 384 320C384 337.7 398.3 352 416 352z"/></svg>
            </div>
            <div class="stat-value">@AllRrgisterVehicle</div>
            <div class="stat-label">تعداد درخواست وسیله نقلیه جهت احراز</div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M568.4 37.7C578.2 34.2 589 36.7 596.4 44C603.8 51.3 606.2 62.2 602.7 72L424.7 568.9C419.7 582.8 406.6 592 391.9 592C377.7 592 364.9 583.4 359.6 570.3L295.4 412.3C290.9 401.3 292.9 388.7 300.6 379.7L395.1 267.3C400.2 261.2 399.8 252.3 394.2 246.7C388.6 241.1 379.6 240.7 373.6 245.8L261.2 340.1C252.1 347.7 239.6 349.7 228.6 345.3L70.1 280.8C57 275.5 48.4 262.7 48.4 248.5C48.4 233.8 57.6 220.7 71.5 215.7L568.4 37.7z"/></svg>
            </div>
            <div class="stat-value">@IsSendRrgisterVehicle</div>
            <div class="stat-label">تعداد وسیله نقلیه بعد از بررسی به لیارا ارسال شد</div>

        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M320 64C324.6 64 329.2 65 333.4 66.9L521.8 146.8C543.8 156.1 560.2 177.8 560.1 204C559.6 303.2 518.8 484.7 346.5 567.2C329.8 575.2 310.4 575.2 293.7 567.2C121.3 484.7 80.6 303.2 80.1 204C80 177.8 96.4 156.1 118.4 146.8L306.7 66.9C310.9 65 315.4 64 320 64zM320 130.8L320 508.9C458 442.1 495.1 294.1 496 205.5L320 130.9L320 130.9z"/></svg>
            </div>
            <div class="stat-value">@NotSendRrgisterVehicle</div>
            <div class="stat-label">تعداد وسیله نقلیه بعد از بررسی به لیارا ارسال نشد</div>

        </div>


        <div class="stat-card">
            <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M129.9 292.5C143.2 199.5 223.3 128 320 128C373 128 421 149.5 455.8 184.2C456 184.4 456.2 184.6 456.4 184.8L464 192L416.1 192C398.4 192 384.1 206.3 384.1 224C384.1 241.7 398.4 256 416.1 256L544.1 256C561.8 256 576.1 241.7 576.1 224L576.1 96C576.1 78.3 561.8 64 544.1 64C526.4 64 512.1 78.3 512.1 96L512.1 149.4L500.8 138.7C454.5 92.6 390.5 64 320 64C191 64 84.3 159.4 66.6 283.5C64.1 301 76.2 317.2 93.7 319.7C111.2 322.2 127.4 310 129.9 292.6zM573.4 356.5C575.9 339 563.7 322.8 546.3 320.3C528.9 317.8 512.6 330 510.1 347.4C496.8 440.4 416.7 511.9 320 511.9C267 511.9 219 490.4 184.2 455.7C184 455.5 183.8 455.3 183.6 455.1L176 447.9L223.9 447.9C241.6 447.9 255.9 433.6 255.9 415.9C255.9 398.2 241.6 383.9 223.9 383.9L96 384C87.5 384 79.3 387.4 73.3 393.5C67.3 399.6 63.9 407.7 64 416.3L65 543.3C65.1 561 79.6 575.2 97.3 575C115 574.8 129.2 560.4 129 542.7L128.6 491.2L139.3 501.3C185.6 547.4 249.5 576 320 576C449 576 555.7 480.6 573.4 356.5z"/></svg>
            </div>
            <div class="stat-value">@AllInsertServices</div>
            <div class="stat-label">تعداد سرویس ثبت می باشد</div>

        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M199.2 181.4L173.1 256L466.9 256L440.8 181.4C436.3 168.6 424.2 160 410.6 160L229.4 160C215.8 160 203.7 168.6 199.2 181.4zM103.6 260.8L138.8 160.3C152.3 121.8 188.6 96 229.4 96L410.6 96C451.4 96 487.7 121.8 501.2 160.3L536.4 260.8C559.6 270.4 576 293.3 576 320L576 512C576 529.7 561.7 544 544 544L512 544C494.3 544 480 529.7 480 512L480 480L160 480L160 512C160 529.7 145.7 544 128 544L96 544C78.3 544 64 529.7 64 512L64 320C64 293.3 80.4 270.4 103.6 260.8zM192 368C192 350.3 177.7 336 160 336C142.3 336 128 350.3 128 368C128 385.7 142.3 400 160 400C177.7 400 192 385.7 192 368zM480 400C497.7 400 512 385.7 512 368C512 350.3 497.7 336 480 336C462.3 336 448 350.3 448 368C448 385.7 462.3 400 480 400z"/></svg>
            </div>
            <div class="stat-value">@CountAllowedVehicle</div>
            <div class="stat-label">تعداد ماشین مجاز از آخرین اطلاعات از لیارا دریافت شد</div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640"><!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M129.9 292.5C143.2 199.5 223.3 128 320 128C373 128 421 149.5 455.8 184.2C456 184.4 456.2 184.6 456.4 184.8L464 192L416.1 192C398.4 192 384.1 206.3 384.1 224C384.1 241.7 398.4 256 416.1 256L544.1 256C561.8 256 576.1 241.7 576.1 224L576.1 96C576.1 78.3 561.8 64 544.1 64C526.4 64 512.1 78.3 512.1 96L512.1 149.4L500.8 138.7C454.5 92.6 390.5 64 320 64C191 64 84.3 159.4 66.6 283.5C64.1 301 76.2 317.2 93.7 319.7C111.2 322.2 127.4 310 129.9 292.6zM573.4 356.5C575.9 339 563.7 322.8 546.3 320.3C528.9 317.8 512.6 330 510.1 347.4C496.8 440.4 416.7 511.9 320 511.9C267 511.9 219 490.4 184.2 455.7C184 455.5 183.8 455.3 183.6 455.1L176 447.9L223.9 447.9C241.6 447.9 255.9 433.6 255.9 415.9C255.9 398.2 241.6 383.9 223.9 383.9L96 384C87.5 384 79.3 387.4 73.3 393.5C67.3 399.6 63.9 407.7 64 416.3L65 543.3C65.1 561 79.6 575.2 97.3 575C115 574.8 129.2 560.4 129 542.7L128.6 491.2L139.3 501.3C185.6 547.4 249.5 576 320 576C449 576 555.7 480.6 573.4 356.5z"/></svg>
            </div>
            <div class="stat-value">اتصال به لیارا </div>
            @{
                if (isChecking)
                {
                    <div class="stat-label">@((canAccess)?"برقرار است":"برقرار نیست")</div>
                }
                else
                {
                   <div class="stat-label">در حال بررسی</div>

                }
            }
            
        </div>
    </div>


    <!-- Main Content Area -->
    <div class="grid grid-cols-2 gap-lg">
        <!-- Data Fetcher Card -->
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">دریافت داده از لیارا</h4>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label for="apiEndpoint" class="form-label">آدرس مقصد</label>
                    <input type="text" class="form-control" id="apiEndpoint" @bind="apiEndpoint"
                    placeholder="آدرس مقصد" />
                    <div class="mt-sm">
                        <span class="text-secondary">دسترسی سریع:</span>
                        <div class="flex gap-sm mt-sm">
                            <button class="btn btn-sm btn-outline" @onclick='() => SetEndpoint("/api/ServicesGateManagement/access-Vehicles")'>
                                وسیله نقلیه
                            </button>
                            <button class="btn btn-sm btn-outline" @onclick='() => SetEndpoint("/api/ServicesGateManagement/access-gates")'>
                                گیت
                            </button>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="fileName" class="form-label">نام فایل</label>
                    <input type="text" class="form-control" id="fileName" @bind="fileName"
                    placeholder="نام فایل را وارد کنید (e.g., data.json)" />
                </div>

                <div class="flex gap-sm">
                    <button class="btn btn-primary" @onclick="FetchData" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <span class="spinner spinner-sm"></span>
                            <span>در حال دریافت...</span>
                        }
                        else
                        {
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.854 8.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708 0z" />
                                <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5z" />
                            </svg>
                            <span>دریافت داده</span>
                        }
                    </button>

                    @if (!string.IsNullOrEmpty(fetchedData))
                    {
                        <button class="btn btn-success" @onclick="SaveToFile">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                                <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
                                <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z" />
                            </svg>
                            ذخیره
                        </button>
                        <button class="btn btn-ghost" @onclick="ClearData">
                            پاک کردن
                        </button>
                    }
                </div>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-md">
                        @errorMessage
                    </div>
                }

                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="alert alert-success mt-md">
                        @successMessage
                    </div>
                }
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">تعداد سرویس های ثبت شده جهت دریافت دوره ای</h4>
            </div>
            <div class="card-body">
                <div class="activity-list">

                    @{
                        foreach (var item in configurations)
                        {
                            <div class="activity-item">
                                <div class="activity-icon bg-success">
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="white">
                                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                                    </svg>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-text">نام فایل:@item.FileName</p>
                                    <p class="activity-text">دوره زمانی:@item.IntervalMinutes</p>
                                    <span class="activity-time">وضعیت:@((item.IsEnabled)?"فعال":"غیرفعال")</span>
                                </div>
                            </div>
                        }
                    }





                </div>
            </div>
        </div>
    </div>

</div>

@code {
    private string apiEndpoint = "/api/access/vehicles/access-info";
    private string fileName = "vehicles-data.json";
    private List<ApiConfiguration> configurations = new();
    private string fetchedData = string.Empty;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private string dataSize = string.Empty;
    private bool isLoading = false;
    private int AllRrgisterVehicle = 0;
    private int IsSendRrgisterVehicle = 0;
    private int NotSendRrgisterVehicle = 0;
    private int AllInsertServices = 0;
    private int CountAllowedVehicle = 0;
    private string message = string.Empty;
    private bool isError = false;
    private bool canAccess = false;
    private bool isChecking = true;



    protected override async Task OnInitializedAsync()
    {
        await LoadIndex();
        await CheckConection();
    }


    private async Task LoadIndex()
    {


        try
        {
            configurations = await ConfigService.LoadConfigurationsAsync();
            var resultInfoVehicleInDB = await VehicleService.GetAllRequestVehicle();//Get All requst st in DB Local For Analiz
            AllRrgisterVehicle = resultInfoVehicleInDB.Count();
            IsSendRrgisterVehicle = resultInfoVehicleInDB.Where(p => p.IsSent == true).Count();
            NotSendRrgisterVehicle = resultInfoVehicleInDB.Where(p => p.IsSent == false).Count();
            AllInsertServices = configurations.Count();
            CountAllowedVehicle = await VehicleService.CountVehicleInFileJson();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading configurations");
            ShowMessage("Error loading configurations", true);
        }


    }
    private void SetEndpoint(string endpoint)
    {
        apiEndpoint = endpoint;
    }
    private async Task FetchData()
    {
        errorMessage = string.Empty;
        successMessage = string.Empty;
        isLoading = true;

        try
        {
            if (string.IsNullOrWhiteSpace(apiEndpoint))
            {
                errorMessage = "Please enter an API endpoint";
                return;
            }

            Logger.LogInformation($"Fetching data from: {apiEndpoint}");
            FetchDataRequest request = new FetchDataRequest()
                {
                    Endpoint = apiEndpoint
                };
            fetchedData = await ConfigService.FetchExternalDataAsync(request);

            var bytes = System.Text.Encoding.UTF8.GetBytes(fetchedData);
            dataSize = FormatFileSize(bytes.Length);

            successMessage = $"Data fetched successfully! Size: {dataSize}";
            Logger.LogInformation(successMessage);
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            Logger.LogError(ex, "Error fetching data");
        }
        finally
        {
            isLoading = false;
        }
    }
    private async Task SaveToFile()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(fileName))
            {
                errorMessage = "Please enter a file name";
                return;
            }

            var finalFileName = fileName.EndsWith(".json") ? fileName : fileName + ".json";
            var bytes = System.Text.Encoding.UTF8.GetBytes(fetchedData);
            var base64 = Convert.ToBase64String(bytes);

            await JSRuntime.InvokeVoidAsync("downloadFileFromBase64", finalFileName, base64);
            successMessage = $"File '{finalFileName}' downloaded successfully!";
        }
        catch (Exception ex)
        {
            errorMessage = $"Error saving file: {ex.Message}";
            Logger.LogError(ex, "Error saving file");
        }
    }
    private string FormatFileSize(long bytes)
    {
        string[] sizes = { "B", "KB", "MB", "GB" };
        int order = 0;
        double size = bytes;

        while (size >= 1024 && order < sizes.Length - 1)
        {
            order++;
            size /= 1024;
        }

        return $"{size:0.##} {sizes[order]}";
    }
    private void ClearData()
    {
        fetchedData = string.Empty;
        errorMessage = string.Empty;
        successMessage = string.Empty;
        dataSize = string.Empty;
    }
    private void ShowMessage(string msg, bool error)
    {
        message = msg;
        isError = error;
    }
    private async Task CheckConection()
    {
        try
        {
            canAccess =await ApiDataService.CheckConnectionToLiara();
             isChecking = true;
        }
        catch
        {
            canAccess = false;
            isChecking = false;
        }
        

    }
}