@page "/Updateuser/{Id}"
@inherits AppComponentBase
@attribute [Authorize(Roles = "Admin,Manager")]

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4>ثبت کاربر جدید</h4>
                </div>
                <div class="card-body">
                    <EditForm Model="@User" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">نام</label>
                                <InputText class="form-control" @bind-Value="User.FirstName" />
                                <ValidationMessage For="@(() => User.FirstName)" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">نام خانوادگی</label>
                                <InputText class="form-control" @bind-Value="User.LastName" />
                                <ValidationMessage For="@(() => User.LastName)" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">ایمیل</label>
                                <InputText type="email" class="form-control" @bind-Value="User.Email" />
                                <ValidationMessage For="@(() => User.Email)" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">نقش کاربر</label>
                                <InputSelect class="form-control" @bind-Value="User.Role">
                                    @foreach (var role in Enum.GetValues<UserRole>())
                                    {
                                        <option value="@role">@role</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => User.Role)" />
                            </div>
                        </div>

                        <div class="d-flex gap-2 mb-3">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    <span>در حال ویرایش...</span>
                                }
                                else
                                {
                                    <span>ویرایش کاربر</span>
                                }
                            </button>

                        </div>


                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">
                                @errorMessage
                            </div>
                        }
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    private UserDto User = new UserDto();
    private UpdateUserDto UpdateUser;
    private bool isLoading = false;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        int userId;
        if (!int.TryParse(Id, out userId))
        {
            errorMessage = "شناسه کاربر معتبر نیست!";
            return;
        }

        User = await _User.GetUserById(userId);
    } 
    private async Task HandleValidSubmit()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            UpdateUser = new UpdateUserDto()
            {
                    Email = User.Email,
                    FirstName = User.FirstName,
                    LastName = User.LastName,
                    Role = User.Role,
                    Id = User.Id

            };
            if (await _User.UpdateUser(UpdateUser))
            {
                AlertService.Show($"کاربر {User.FirstName} {User.LastName} با موفقیت ویرایش شد!");
                await Task.Delay(2000);
                AuthStateProvider.NotifyUserLogout();
                NavManager.NavigateTo("/login");
            }
            else
            {
                errorMessage=$"خطا در ویرایش کاربر";
            }

        }
        catch (Exception ex)
        {
            errorMessage = $"خطا در ثبت: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

}
