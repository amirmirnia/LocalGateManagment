// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicesGateManagment.Shared.DBContext;

#nullable disable

namespace ServicesGateManagment.Shared.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServicesGateManagment.Shared.Gates.Gate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmActionOnFailed")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "armActionOnFailed");

                    b.Property<int>("ArmActionOnSuccess")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "armActionOnSuccess");

                    b.Property<bool>("CheckUnauthorizedEntry")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "checkUnauthorizedEntry");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "createdBy");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "createdUtc");

                    b.Property<int?>("GateAreaId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "gateAreaId");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "guid");

                    b.Property<int>("InquireType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "inquireType");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastModifiedBy");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "lastModifiedUtc");

                    b.Property<bool>("NeedValidAccess")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "needValidAccess");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "objectType");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.HasIndex("GateAreaId");

                    b.ToTable("Gate");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Gates.GateArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "createdBy");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "createdUtc");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "guid");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastModifiedBy");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "lastModifiedUtc");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.HasKey("Id");

                    b.ToTable("GateArea");

                    b.HasAnnotation("Relational:JsonPropertyName", "gateArea");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("GateId")
                        .HasColumnType("int");

                    b.Property<bool>("GateValidation")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreviousInquireId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyVehicleId")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResultId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GateId");

                    b.HasIndex("ResultId");

                    b.ToTable("VehicleInquire");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquireResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmAction")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("GateValidation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValidAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("InBlackList")
                        .HasColumnType("bit");

                    b.Property<int>("InquireId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NotConfirmedVisitor")
                        .HasColumnType("bit");

                    b.Property<bool>("OverStayed")
                        .HasColumnType("bit");

                    b.Property<bool>("UnAuthorizedEntry")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VehicleInquireResult");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquireSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CameraSnapshot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InquireId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlateImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InquireId");

                    b.ToTable("VehicleInquireSnapshot");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Gates.Gate", b =>
                {
                    b.HasOne("ServicesGateManagment.Shared.Gates.GateArea", "GateArea")
                        .WithMany()
                        .HasForeignKey("GateAreaId");

                    b.Navigation("GateArea");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquire", b =>
                {
                    b.HasOne("ServicesGateManagment.Shared.Gates.Gate", "Gate")
                        .WithMany()
                        .HasForeignKey("GateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquireResult", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gate");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquireSnapshot", b =>
                {
                    b.HasOne("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquire", "Inquire")
                        .WithMany("Snapshots")
                        .HasForeignKey("InquireId");

                    b.Navigation("Inquire");
                });

            modelBuilder.Entity("ServicesGateManagment.Shared.Models.Vehicles.VehicleInquire", b =>
                {
                    b.Navigation("Snapshots");
                });
#pragma warning restore 612, 618
        }
    }
}
